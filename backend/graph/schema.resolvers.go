package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"fmt"

	"github.com/ferndot/demo-rule-engine/graph/model"
)

// CreateFlow is the resolver for the createFlow field.
func (r *mutationResolver) CreateFlow(ctx context.Context, input model.NewFlow) (*model.Flow, error) {
	panic(fmt.Errorf("not implemented: CreateFlow - createFlow"))
}

// Flows is the resolver for the flows field.
func (r *queryResolver) Flows(ctx context.Context) ([]*model.Flow, error) {
	panic(fmt.Errorf("not implemented: Flows - flows"))
}

// GetFlow is the resolver for the getFlow field.
func (r *queryResolver) GetFlow(ctx context.Context, id string) (*model.Flow, error) {
	panic(fmt.Errorf("not implemented: GetFlow - getFlow"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
